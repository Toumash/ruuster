syntax = "proto3";
package ruuster;

enum ExchangeKind {
    FANOUT = 0;
}

message MessageHeader {
    string exchange_name = 1;
}

message MessageBody {
    string payload = 1;
}

message Message {
    MessageHeader header = 1;
    MessageBody body = 2;
}

message ExchangeDefinition {
    ExchangeKind kind = 1;
    string exchange_name = 2;
}

message Empty {}

service Ruuster {
    rpc QueueDeclare(QueueDeclareRequest) returns (Empty);
    rpc ExchangeDeclare(ExchangeDeclareRequest) returns (Empty);
    rpc BindQueueToExchange(BindQueueToExchangeRequest) returns (Empty);
    rpc ListQueues(Empty) returns (ListQueuesResponse);
    rpc ListExchanges(Empty) returns (ListExchangesResponse);
    rpc Produce(stream Message) returns (Empty);
    rpc Consume(ListenRequest) returns (stream Message);
}

message QueueDeclareRequest {
    string queue_name = 1;
}

message ExchangeDeclareRequest {
    ExchangeDefinition exchange = 1;
}

message BindQueueToExchangeRequest {
    string exchange_name = 1;
    string queue_name = 2;
}

message PublishToExchangeRequest
{
    string exchange = 1;
    MessageBody body = 2;
}

message ListQueuesResponse
{
    repeated string queue_names = 1;
}

message ListExchangesResponse
{
    repeated string exchange_names = 1;
}

message ListenRequest
{
    string queue_name = 1;
}