syntax = "proto3";
package ruuster;

service Ruuster {
    rpc QueueDeclare(QueueDeclareRequest) returns (Empty);
    rpc ExchangeDeclare(ExchangeDeclareRequest) returns (Empty);
    rpc Bind(BindRequest) returns (Empty);
    rpc ListQueues(Empty) returns (ListQueuesResponse);
    rpc ListExchanges(Empty) returns (ListExchangesResponse);
    rpc Produce(ProduceRequest) returns (Empty);
    rpc ConsumeBulk(ConsumeRequest) returns (stream Message);
    rpc ConsumeOne(ConsumeRequest) returns (Message);
    rpc AckMessage(AckRequest) returns (Empty);
    rpc AckMessageBulk(AckMessageBulkRequest) returns (Empty);
}

message Empty {}

message RoutingKey {
    string value = 1;
}

message Message {
    string uuid = 1;
    string payload = 2;
}

message Metadata {
    RoutingKey routing_key = 1;
}

message ExchangeDefinition {
    int32 kind = 1;
    string exchange_name = 2;
}

message QueueDeclareRequest {
    string queue_name = 1;
}

message ExchangeDeclareRequest {
    ExchangeDefinition exchange = 1;
}

message BindRequest {
    Metadata metadata = 1;
    string exchange_name = 2;
    string queue_name = 3;
}

message ListQueuesResponse
{
    repeated string queue_names = 1;
}

message ListExchangesResponse
{
    repeated string exchange_names = 1;
}

message ConsumeRequest
{
    string queue_name = 1;
    bool auto_ack = 2;
}

message ProduceRequest
{
    Metadata metadata = 1;
    string exchange_name = 2;
    string payload = 3;
}

message AckRequest
{
    string uuid = 1;
}

message AckMessageBulkRequest {
    repeated string uuids = 1;
}